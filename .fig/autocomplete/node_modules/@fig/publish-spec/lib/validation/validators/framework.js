var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { value, questions } from "./helpers.js";
export const validateFramework = (options) => __awaiter(void 0, void 0, void 0, function* () {
    const { framework, interactive } = options;
    if (framework || !interactive)
        return value({ framework });
    return questions({
        type: "text",
        name: "framework",
        message: "What integration was/is being used to generate the spec? (enter to skip)",
    });
});
